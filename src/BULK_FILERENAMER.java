/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.*;
import java.awt.*;
import java.io.*;
import java.nio.file.*;
import java.util.*;


import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author dhira
 */
public class BULK_FILERENAMER extends javax.swing.JFrame {



    /**
     * Creates new form BULK_FILERENAMER
     */
    public BULK_FILERENAMER() {
        initComponents();
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("SELECT PATH");

        jTextField1.setDragEnabled(true);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(51, 51, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("BROWSER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(204, 255, 255));
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Orignal File Name", "New File Name"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getAccessibleContext().setAccessibleDescription("");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Prefix");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Replace");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Sufix");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("With");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(102, 102, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Preview");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(102, 255, 102));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Rename");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 51, 51));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Clear");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(0, 0, 204));
        jLabel6.setText("BULK FILE RENAMER");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addGap(221, 221, 221))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(54, 54, 54)
                                .addComponent(jButton3)
                                .addGap(129, 129, 129))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(jLabel6)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        // TODO add your handling code here:
      // get back the paths from the text field where the usr give input
String selecte_path = jTextField1.getText().trim();

// it can check whether the give any path_location at all 
if (selecte_path.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Please select files or a folder first.");
    return; // no path is selected then exit 
}


//split the paths input by semcolon allow for multiple file or folder select
String[] paths = selecte_path.split(";");


//give some advanced features for renaming the file from text field
String prefix = jTextField2.getText().trim();
String replace = jTextField3.getText().trim();
String suffix = jTextField4.getText().trim();
String replaceWith = jTextField5.getText().trim();


//clear previous row if any are found
DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
model.setRowCount(0);
 int count = 1;


//the user has provided path process each file or folder
for (String path : paths) {
    File file_or_folder = new File(path.trim());

   
    //if file or folder doest not exit show an error
    if (!file_or_folder.exists()) {
        JOptionPane.showMessageDialog(this, "The file or folder does not exist: " + path);
        continue; //skipp for next part
    }

   
    //if user provided path as directory then process each file insided it 
    if (file_or_folder.isDirectory()) {
        File[] files = file_or_folder.listFiles();

       
        //the directory is empty show a messge and skip this folder
        if (files == null || files.length == 0) {
            JOptionPane.showMessageDialog(this, "No files found in the selected folder: " + path);
            continue; // skip to next part
        }

       
        //each file in the folder it can generate new name as give by user as input like add feature etc
        for (File file : files) {
    // only do for file not for sub folder
    if (file.isFile()) {
        String original_name = file.getName();
        String extension = "";

       
        //if the file has extension check and extract from it
        int dotIndex = original_name.lastIndexOf(".");
        if (dotIndex > 0) {
            extension = original_name.substring(dotIndex);
        }

       
        //create new file name using above features like prifix and suffix etc
        String newName = prefix + count + suffix + extension;

      
        //move to the another part or next line
        count++;

        
        //add then add to the table of new file name 
        model.addRow(new Object[]{original_name, newName});
    }
}

    } 
    
    //if uer select only one path then do as per chnages user inputs 
    else if (file_or_folder.isFile()) {
    String original_name = file_or_folder.getName();
    String newName;

    
    //if user give input to repalce and replcewith do for that particular file only
    if (!replace.isEmpty() && !replaceWith.isEmpty()) {
        
        //it can do only replacement without iteration
        newName = prefix + original_name.replace(replace, replaceWith) + suffix;
    } else {
       
        //otherwise use auto incrementing method or logic 
        String extension = "";

        
        //extract  file extension if exits
        int dotIndex = original_name.lastIndexOf(".");
        if (dotIndex > 0) {
            extension = original_name.substring(dotIndex);
        }

        
        //create new name with auto increment number
        newName = prefix + count + suffix + extension;

        count++;//increment the count for next line
    }

   
    //add above changes in table as in row with respected row 
    model.addRow(new Object[]{original_name, newName});
}

}

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 String[] fileTypes = { "All Files", "PDF", "PNG", "JPG", "DOCX", "PPTX" };
    String selectedFileType = (String) JOptionPane.showInputDialog(
        this, 
        "Select File Type", 
        "File Type Filter", 
        JOptionPane.PLAIN_MESSAGE, 
        null, 
        fileTypes, 
        fileTypes[0]
    );

    if (selectedFileType == null) {
        // User canceled the dialog, do nothing
        return;
    }

    JFileChooser fileChooser = new JFileChooser();
    fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
    fileChooser.setMultiSelectionEnabled(true);
    fileChooser.setDialogTitle("Select Files or Folders");

    // Set file filter based on the selected file type
    if (!"All Files".equals(selectedFileType)) {
        FileNameExtensionFilter filter = null;

        switch (selectedFileType) {
            case "PDF":
                filter = new FileNameExtensionFilter("PDF Files", "pdf");
                break;
            case "PNG":
                filter = new FileNameExtensionFilter("PNG Images", "png");
                break;
            case "JPG":
                filter = new FileNameExtensionFilter("JPG Images", "jpg", "jpeg");
                break;
            case "DOCX":
                filter = new FileNameExtensionFilter("Word Documents", "docx");
                break;
            case "PPTX":
                filter = new FileNameExtensionFilter("PowerPoint Presentations", "pptx");
                break;
        }

        if (filter != null) {
            fileChooser.setFileFilter(filter);
        }
    }

    int result = fileChooser.showOpenDialog(this);
    if (result == JFileChooser.APPROVE_OPTION) {
        File[] selectedFiles = fileChooser.getSelectedFiles();

        if (selectedFiles.length > 0) {
            StringBuilder paths = new StringBuilder();
            DefaultTableModel table_model = (DefaultTableModel) jTable1.getModel();

            // Clear the table before adding new files
            table_model.setRowCount(0);

            for (File file : selectedFiles) {
                paths.append(file.getAbsolutePath()).append(";");
                table_model.addRow(new Object[] { file.getName(), "" }); // Add original name and blank new name
            }

            // Show selected paths in the text field
            jTextField1.setText(paths.toString());
        }
    }  // TODO add your handling code here:
  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
       // get the list of paths entered by the user
// get the list of paths entered by the user
String selecte_path = jTextField1.getText().trim();

    // check if the user has entered any paths
    if (selecte_path.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please select files or a folder first.");
        return; // exit the method if no paths are selected
    }

    // sepreate the paths into an array based on semicolons
    String[] paths = selecte_path.split(";");

    // Get the table model to work with the list of file names
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    boolean rename_successful = true; // flag for all rename sucessfully process

    // loop through each row in the table to rename the files
    for (int i = 0; i < model.getRowCount(); i++) {
        String original_name = (String) model.getValueAt(i, 0); // get the original file name
        String newName = (String) model.getValueAt(i, 1); // get the new file name

        boolean renamed = false; // flag to track if the file is renamed successfully
        
        // check each path provided by the user
        for (String path : paths) {
            File file_or_folder = new File(path.trim());

            // if it is  file and the name matches then try to rename it
            if (file_or_folder.isFile() && file_or_folder.getName().equals(original_name)) {
                File newFile = new File(file_or_folder.getParent(), newName);
                
                // if the new name already exists thenshow an error message
                if (newFile.exists()) {
                    JOptionPane.showMessageDialog(this, "The new file name already exists: " + newName);
                } else {
                    renamed = file_or_folder.renameTo(newFile); // Rename the file
                }
                break;
            } 
            // if it is  a folder then check inside the folder for the file
            else if (file_or_folder.isDirectory()) {
                File originalFile = new File(file_or_folder, original_name);
                File newFile = new File(file_or_folder, newName);

                // if the original file exists then  rename it if the new name is not taken
                if (originalFile.exists() && originalFile.isFile()) {
                    if (newFile.exists()) {
                        JOptionPane.showMessageDialog(this, "The new file name already exists: " + newName);
                    } else {
                        renamed = originalFile.renameTo(newFile); // Rename the file in the directory
                    }
                }
            }
        }

        // if the file was not renamed successfully, set the overall success flag to false
        if (!renamed) {
            rename_successful = false;
            JOptionPane.showMessageDialog(this, "Failed to rename file: " + original_name);
        }
    }

    // after processing all files then  show a final success or failure message
    if (rename_successful) {
        JOptionPane.showMessageDialog(this, "All files renamed successfully!");
    } else {
        JOptionPane.showMessageDialog(this, "Some files failed to rename.");
    }



    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //the above code only work for to clear the all text feald in the gui 
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        //the above code  can clear the conatint of the table 
        DefaultTableModel table_model = (DefaultTableModel) jTable1.getModel();
    
    for (int row = 0; row < table_model.getRowCount(); row++) {
        for (int col = 0; col < table_model.getColumnCount(); col++) {
            table_model.setValueAt("", row, col); // Set cell content to an empty string
        }
    }
        

        jButton4.setEnabled(true);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BULK_FILERENAMER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BULK_FILERENAMER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BULK_FILERENAMER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BULK_FILERENAMER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BULK_FILERENAMER().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
